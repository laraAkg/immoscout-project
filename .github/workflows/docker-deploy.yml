name: ModelOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  modelops:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Scrapy Spider (direkt mit Mongo)
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          cd immo_spider
          scrapy crawl immoscout_spider -s CLOSESPIDER_PAGECOUNT=50

      - name: Model Training & Save to Azure Blob
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
        run: |
          python model.py -u "${MONGO_URI}"
          python save.py -c "${AZURE_STORAGE_CONNECTION_STRING}"

  docker-deploy:
    needs: modelops
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure Container Registry (ACR)
        uses: azure/docker-login@v1
        with:
          login-server: lara283.azurecr.io
          username: ${{ secrets.AZURE_ACR_USERNAME }}
          password: ${{ secrets.AZURE_ACR_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t lara283.azurecr.io/immoscout:latest .

      - name: Push Docker Image to ACR
        run: |
          docker push lara283.azurecr.io/immoscout:latest

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: immoscout
          slot-name: production